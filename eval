================atoi

#include <stdio.h>
#include <stdlib.h>

int	main(int argc, char *argv[])
{
	if (argc == 2)
	{
		printf("\nft_atoi\t: %d\n", ft_atoi(argv[1]));
		printf("atoi\t: %d\n", atoi(argv[1]));
	}
	printf("\n");
	return (0);
}

=================bzero

#include <string.h>
#include <stdio.h>

void	printall(void *s, size_t n)
{
	char	*str;

	str = s;
	while (n--)
		printf("%c", *str++);
}

int		main(int argc, char *argv[])
{
	void	*s;
	void	*s2;
	size_t	len;

	s = argv[1];
	s2 = argv[1];
	len = ft_strlen(argv[1]);
	if (argc == 3)
	{
		// s
		ft_bzero(s, ft_atoi(argv[2]));
		printf("\nft_bzero :\t");
		printall(s, len);
		printf("\n");
		// s2
		bzero(s2, ft_atoi(argv[2]));
		printf("\nbzero :\t\t");
		printall(s2, len);
		printf("\n");
	}
	printf("\n");
	return (0);
}

==================isalnum

#include <stdio.h>

int	main(int argc, char *argv[])
{
	if (argc == 2)
		printf("%d", ft_isalnum(argv[1][0]));
	printf("\n");
	return (0);
}

==================isalpha

#include <stdio.h>

int	main(int argc, char *argv[])
{
	if (argc == 2)
		printf("%d", ft_isalpha((int)argv[1][0]));
	printf("\n");
	return (0);
}

==================isascii

#include <stdio.h>

int	main(int argc, char *argv[])
{
	if (argc == 2)
		printf("%d", ft_isascii(argv[1][0]));
	printf("\n");
	return (0);
}

==================isdigit

#include <stdio.h>

int	main(int argc, char *argv[])
{
	if (argc == 2)
		printf("%d", ft_isdigit(argv[1][0]));
	printf("\n");
	return (0);
}

==================memccpy

#include <stdio.h>
#include <string.h>

// ex:		./a.out "jklmnoprstuvwxyz" "abcdefghi" e 7

int	main(int argc, char *argv[])
{
	char	*s;
	char	*s2;

	if (argc == 5)
	{
		s = argv[1];
		s2 = argv[1];
		printf("\nft_memccpy :\t%s\n", (char *)memccpy(s, \
												argv[2], \
												argv[3][0], \
												ft_atoi(argv[4])));
		printf("memccpy :\t%s\n", (char *)ft_memccpy(s2, \
												argv[2], \
												argv[3][0], \
												ft_atoi(argv[4])));
	}
	printf("\n");
	return (0);
}

/*
int	main(int argc, char *argv[])
{
	char	s[6] = {'a', 'b', 'c', 'd', 254, '\0'};
	char	s2[6] = {'a', 'b', 'c', 'd', 254, '\0'};

	if (argc == 4)
	{
		printf("\nft_memccpy :\t%s\n", (char *)memccpy(s, \
												argv[1], \
												argv[2][0], \
												ft_atoi(argv[3])));
		printf("memccpy :\t%s\n", (char *)ft_memccpy(s2, \
												argv[1], \
												argv[2][0], \
												ft_atoi(argv[3])));
	}
	printf("\n");
	return (0);
}*/

==================memcpy

#include <stdio.h>
#include <string.h>


int	main(int argc, char *argv[])
{
	if (argc == 4)
	{
		char	dst[ft_atoi(argv[1])];
		printf("\nft_memcpy :\t%s\n", (char *)memcpy(dst, argv[2], ft_atoi(argv[3])));
		char	dst2[ft_atoi(argv[1])];
		printf("memcpy :\t%s\n", (char *)ft_memcpy(dst2, argv[2], ft_atoi(argv[3])));
	}
	printf("\n");
	return (0);
}

==================memset

#include <stdio.h>
#include <string.h>

int	main(int argc, char *argv[])
{
	if (argc == 4)
	{
		char	dst[ft_atoi(argv[1])];
		printf("\nft_memset :\t%s\n", (char *)ft_memset(dst, argv[2][0], ft_atoi(argv[3])));
		char	dst2[ft_atoi(argv[1])];
		printf("memset :\t%s\n", (char *)memset(dst2, argv[2][0], ft_atoi(argv[3])));
	}
	printf("\n");
	return (0);
}

==================strchr

#include <stdio.h>

int	main(int argc, char *argv[])
{
	if (argc == 3)
		printf("%s", ft_strchr(argv[1], argv[2][0]));
	printf("\n");
	return (0);
}

=================strlen

int	main(int argc, char *argv[])
{
	if (argc == 2)
		printf("%ld", ft_strlen(argv[1]));
	printf("\n");
	return (0);
}

==================strncmp

#include <stdio.h>
#include <string.h>

int	main(int argc, char *argv[])
{
	if (argc == 4)
	{
		printf("\nft_strncmp :\t%d\n", ft_strncmp(argv[1], argv[2], ft_atoi(argv[3])));
		printf("strncmp :\t%d\n", strncmp(argv[1], argv[2], ft_atoi(argv[3])));
	}
	printf("\n");
	return (0);
}

/*
int	main(int argc, char *argv[])
{
	char t[] = {'j', 'a', 254};
	if (argc == 3)
	{
		printf("\nft_strncmp :\t%d\n", ft_strncmp(t, argv[1], ft_atoi(argv[2])));
		printf("strncmp :\t%d\n", strncmp(t, argv[1], ft_atoi(argv[2])));
	}
	printf("\n");
	return (0);
}*/

==================strrchr


#include <stdio.h>

int	main(int argc, char *argv[])
{
	if (argc == 3)
		printf("%s", ft_strrchr(argv[1], argv[2][0]));
	printf("\n");
	return (0);
}

==================tolower

#include <stdio.h>

int	main(int argc, char *argv[])
{
	if (argc == 2)
		printf("%d", ft_tolower(argv[1][0]));
	printf("\n");
	return (0);
}

==================toupper

#include <stdio.h>

int	main(int argc, char *argv[])
{
	if (argc == 2)
		printf("%d", ft_toupper(argv[1][0]));
	printf("\n");
	return (0);
}
